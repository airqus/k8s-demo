name: Deploy via Deployment YAML

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose whether to deploy a version or rollback'
        required: true
        type: choice
        options:
          - deploy
          - rollback
        default: deploy
      version:
        description: 'Select version to deploy (only used if action=deploy)'
        required: false
        type: choice
        options:
          - v1
          - v2
          - v3
        default: v1


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v3'
        with:
          install_components: 'gke-gcloud-auth-plugin'

      - name: Get GKE credentials
        env:
          GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} \
            --zone ${{ secrets.GKE_ZONE }} \
            --project $GOOGLE_PROJECT

      - name: Update deployment.yaml with selected version
        env:
          GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
          VERSION: ${{ github.event.inputs.version }}
        run: |
            if [ "$ACTION" = "deploy" ]; then
              echo "Deploying version $VERSION..."
  
              # Replace placeholder in app deployment
              sed -i "s|PROJECT_ID|${{ secrets.GOOGLE_PROJECT }}|g" ./deployment.yaml
              sed -i "s|IMAGE_PLACEHOLDER|${{ github.event.inputs.version }}|g" ./deployment.yaml
  
              # Apply app deployment
              kubectl apply -f ./deployment.yaml
              kubectl rollout status deployment/app-demo -n default
  
              # Deploy Postgres only if version is v3
              if [ "$VERSION" = "v3" ]; then
                echo "Deploying Postgres for v3..."
                kubectl apply -f ./v3/postgres.yaml
                kubectl rollout status deployment/postgres -n default
              fi
  
            else
              echo "Rolling back deployment..."
              kubectl rollout undo deployment/app-demo -n default
              kubectl rollout status deployment/app-demo -n default
            fi

          

