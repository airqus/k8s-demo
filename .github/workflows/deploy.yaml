name: Deploy via Deployment YAML
on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose whether to deploy a version or rollback'
        required: true
        type: choice
        options:
          - deploy
          - rollback
        default: deploy
      version:
        description: 'Select version to deploy (only used if action=deploy)'
        required: false
        type: choice
        options:
          - v1
          - v2
          - v3
        default: v1
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v3'
        with:
          install_components: 'gke-gcloud-auth-plugin'
      - name: Get GKE credentials
        env:
          GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} \
            --zone ${{ secrets.GKE_ZONE }} \
            --project $GOOGLE_PROJECT
  
      - name: Update deployment.yaml with selected version
        env:
          GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
          ACTION: ${{ github.event.inputs.action }}
          VERSION: ${{ github.event.inputs.version }}
        run: |
            if [ "$ACTION" = "deploy" ]; then
              echo "Deploying version $VERSION..."
      
              # Set deployment file path based on version
              if [ "$VERSION" = "v3" ]; then
                DEPLOYMENT_FILE="./v3/deployment.yaml"
                echo "Using deployment file: $DEPLOYMENT_FILE"
                
                # Deploy Postgres FIRST for v3
                echo "Deploying Postgres for v3..."
                kubectl apply -f ./v3/postgres.yaml
                echo "Waiting for Postgres to be ready..."
                kubectl wait --for=condition=ready pod -l app=postgres -n default --timeout=120s
              else
                DEPLOYMENT_FILE="./deployment.yaml"
                echo "Using deployment file: $DEPLOYMENT_FILE"
              fi
      
              # Replace placeholders in the selected deployment file
              sed -i "s|PROJECT_ID|${{ secrets.GOOGLE_PROJECT }}|g" $DEPLOYMENT_FILE
              sed -i "s|IMAGE_PLACEHOLDER|${{ github.event.inputs.version }}|g" $DEPLOYMENT_FILE
      
              # Apply app deployment
              kubectl apply -f $DEPLOYMENT_FILE
              kubectl rollout status deployment/app-demo -n default
      
            else
              echo "Rolling back deployment..."
              kubectl rollout undo deployment/app-demo -n default
              kubectl rollout status deployment/app-demo -n default
            fi
